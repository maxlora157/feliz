//===== Cronus Script =======================================
//= Guerra Do Emperium SE
//===== Por: ==================================================
//= Euphy
//===== Versão Atual: =====================================
//= 1.4
//===== Compatível Com: =====================================
//= Cronus
//===== Descrição: =========================================
//= Like agit_main, this file is required
//= for SE castles to function.
//===== Comentários Adicionais: =================================
//= 0.x Previous authors: L0ne_W0lf, Zephyrus, Brian.
//= 1.0 If anything breaks, blame Maki. [Euphy]
//= 1.1 Fixed an incorrect label execution. [Euphy]
//= 1.2 Hopefully fixed a processing error. [Euphy]
//= 1.3 Fixed barricade issue in schg_cas02. [Cookie]
//= 1.4 Tradução do Script [Reploid] / [BOO]
//============================================================

// Core, triggers all other events
//============================================================
-	script	Manager#template	-1,{
OnAgitInit2:
OnRecvCastle2:
	if (strnpcinfo(2) == "template") end;
	if (!getcastledata(strnpcinfo(2),1)) {
		donpcevent strnpcinfo(0)+"::OnStart";
		// Monster spawns are identical for all castles.
		monster strnpcinfo(2),0,0,"Druida Malígno",1117,10;
		monster strnpcinfo(2),0,0,"Khalitzburg",1132,4;
		monster strnpcinfo(2),0,0,"Cavaleiro do Abismo",1219,3;
		monster strnpcinfo(2),0,0,"Executor",1205,1;
		monster strnpcinfo(2),0,0,"Penomena",1216,10;
		monster strnpcinfo(2),0,0,"Alarme",1193,18;
		monster strnpcinfo(2),0,0,"Relógio",1269,9;
		monster strnpcinfo(2),0,0,"Raydric Arqueiro",1276,12;
		monster strnpcinfo(2),0,0,"Andarilho",1208,3;
		monster strnpcinfo(2),0,0,"Alice",1275,1;
		monster strnpcinfo(2),0,0,"Cavaleiro Sanguinário",1268,2;
		monster strnpcinfo(2),0,0,"Senhor das Trevas",1272,2;
		monster strnpcinfo(2),0,0,"Gerente",1270,4;
	}
	if (getcastledata(strnpcinfo(2),9) < 1)
		disablenpc "Funcionária Kafra#"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	end;

OnAgitStart2:
	if (strnpcinfo(2) == "template") end;
	if (agitcheck2()) {
		maprespawnguildid strnpcinfo(2),getcastledata(strnpcinfo(2),1),2;
		gvgon strnpcinfo(2);
		donpcevent strnpcinfo(0)+"::OnStart";
	}
	else for(set .@i,0; .@i<4; set .@i,.@i+1)
		donpcevent "RL"+.@i+"#"+strnpcinfo(2)+"::OnDisable";
	end;

OnAgitEnd2:
	if (strnpcinfo(2) == "template") end;
	gvgoff strnpcinfo(2);
	if (getcastledata(strnpcinfo(2),1)) {
		set .@str$,substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
		killmonster strnpcinfo(2),"Mordomo#"+.@str$+"::OnStartArena";
		donpcevent strnpcinfo(0)+"::OnReset";
		donpcevent "Mordomo#"+.@str$+"::OnStop";
	}
	end;

OnStart:
	// $agit_ar0x[] - $agit_sc0x[]
	// 1st Guardian stone, 2nd Guardian stone, Barrier 1, Barrier 2, Barrier 3, Summon Guardians
	// Settings for all but Summon Guardians: 0 = Okay | 1 = Destroyed | 2 = Repairing
	// Summon Guardians: 0 = Do not Summon | 1 = Summon
	if (getcastledata(strnpcinfo(2),1)) {
		setarray getd("$agit_"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9)+"[0]"),0,0,0,0,0,0;
		donpcevent "df1#"+strnpcinfo(2)+"::OnEnable";
		donpcevent "df2#"+strnpcinfo(2)+"::OnEnable";
		for(set .@i,0; .@i<4; set .@i,.@i+1)
			donpcevent "RL"+.@i+"#"+strnpcinfo(2)+"::OnEnable";
	}
OnEmpSpawn:
	if (compare(strnpcinfo(2),"arug")) {
		if (strnpcinfo(2) == "arug_cas01") setarray .@i[0],87,219;
		else if (strnpcinfo(2) == "arug_cas02") setarray .@i[0],89,256;
		else setarray .@i[0],141,293;	// Castles 3,4,5 are identical.
	}
	else {
		if (strnpcinfo(2) == "schg_cas02") setarray .@i[0],162,193;
		else if (strnpcinfo(2) == "schg_cas03") setarray .@i[0],338,202;
		else setarray .@i[0],120,272;	// Castles 1,4,5 are identical.
	}
	monster strnpcinfo(2),.@i[0],.@i[1],"Emperium",1288,1,"Mordomo#"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9)+"::OnStartArena";
	end;

OnReset:
	set .@str$, substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	donpcevent "df1#"+strnpcinfo(2)+"::OnEnable";
	donpcevent "df2#"+strnpcinfo(2)+"::OnEnable";
	donpcevent "gard1#"+strnpcinfo(2)+"::OnReset";
	donpcevent "gard2#"+strnpcinfo(2)+"::OnReset";
	donpcevent "1st Guardian Stone#"+.@str$+"::OnDisable";
	donpcevent "2nd Guardian Stone#"+.@str$+"::OnDisable";
	for(set .@i,1; .@i<4; set .@i,.@i+1)
		donpcevent "Control Device0"+.@i+"#"+.@str$+"::OnDisable";
	for(set .@i,0; .@i<4; set .@i,.@i+1)
		donpcevent "RL"+.@i+"#"+strnpcinfo(2)+"::OnDisable";
	if (agitcheck2())
		setarray getd("$agit_"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9)+"[0]"),0,0,1,1,1,0;
	end;

OnChange:
	set .@str$, substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	setarray getd("$agit_"+.@str$+"[0]"),2,2,1,1,2,0;
	donpcevent strnpcinfo(0)+"::OnEmpSpawn";
	donpcevent "Control Device03#"+.@str$+"::OnEnable";
	donpcevent "1st Guardian Stone#"+.@str$+"::OnEnable";
	donpcevent "2nd Guardian Stone#"+.@str$+"::OnEnable";
	end;

OnClock0001:
	// Spawn Treasure Chests based on castle economy.
	if (strnpcinfo(2) == "template") end;
	if (!getcastledata(strnpcinfo(2),1)) end;
	killmonster strnpcinfo(2),strnpcinfo(0)+"::OnTreasureDied";
	if (getcastledata(strnpcinfo(2),4)) {
		set .@Economy,getcastledata(strnpcinfo(2),2);
		setcastledata strnpcinfo(2),2,.@Economy+getcastledata(strnpcinfo(2),4)+(rand(2) && getgdskilllv(getcastledata(strnpcinfo(2),1),10014));
		if (getcastledata(strnpcinfo(2),2) > 100) setcastledata strnpcinfo(2),2,100;
		setcastledata strnpcinfo(2),4,0;
	}
	if (getcastledata(strnpcinfo(2),5)) {
		set .@Defence,getcastledata(strnpcinfo(2),3);
		setcastledata strnpcinfo(2),3,.@Defence+getcastledata(strnpcinfo(2),5);
		if (getcastledata(strnpcinfo(2),3) > 100) setcastledata strnpcinfo(2),3,100;
		setcastledata strnpcinfo(2),5,0;
	}
	set .@Treasure,getcastledata(strnpcinfo(2),2)/5+4;
	if (!.@Treasure) end;
	freeloop(1);
	if (compare(strnpcinfo(2),"arug")) {
		if (strnpcinfo(2) == "arug_cas01") { 
			set .@treasurebox,1943;
			setarray .@treasurex[0],251,252,253,254,255,256,257,258,251,252,253,254,255,256,257,258,251,252,253,254,255,256,257,258;
			setarray .@treasurey[0],369,369,369,369,368,368,368,368,367,367,367,367,366,366,366,366,365,365,365,365,364,364,364,364;
		}
		else if (strnpcinfo(2) == "arug_cas02") { 
			set .@treasurebox,1944;
			setarray .@treasurex[0],382,383,384,385,386,387,384,385,386,387,388,389,382,383,384,385,386,387,384,385,386,387,388,389;
			setarray .@treasurey[0],231,231,231,231,231,231,230,230,230,230,230,230,225,225,225,225,225,225,224,224,224,224,224,224;
		}
		else { 	// Castles 3,4,5 are identical, except 4's treasure.
			set .@treasurebox,(strnpcinfo(2) == "arug_cas04")?1946:1945;
			setarray .@treasurex[0],291,292,293,294,295,296,293,294,295,296,297,298,291,292,293,294,295,296,293,294,295,296,297,298;
			setarray .@treasurey[0],276,276,276,276,276,276,274,274,274,274,274,274,272,272,272,272,272,272,269,269,269,269,269,269;
		}
	}
	else {
		if (strnpcinfo(2) == "schg_cas02") { 
			set .@treasurebox,1939;
			setarray .@treasurex[0],249,250,251,252,253,246,247,248,249,250,250,251,252,253,246,247,248,249,250,249,250,251,252,253;
			setarray .@treasurey[0],378,378,378,378,378,376,376,376,376,376,374,374,374,374,372,372,372,372,372,370,370,370,370,370;
		}
		else if (strnpcinfo(2) == "schg_cas03") { 
			set .@treasurebox,1940;
			setarray .@treasurex[0],189,190,191,192,193,194,189,190,191,192,193,194,189,190,191,192,193,194,189,190,191,192,193,194;
			setarray .@treasurey[0], 21, 21, 21, 21, 21, 21, 19, 19, 19, 19, 19, 19, 17, 17, 17, 17, 17, 17, 15, 15, 15, 15, 15, 15;
		}
		else {	// Castles 1,4,5 are identical, except treasures.
			if (strnpcinfo(2) == "schg_cas01") set .@treasurebox,1938;
			else if (strnpcinfo(2) == "schg_cas04") set .@treasurebox,1941;
			else set .@treasurebox,1942;
			setarray .@treasurex[0],388,388,388,387,386,385,384,384,384,384,384,384,385,386,387,388,389,390,390,390,389,388,387,386;
			setarray .@treasurey[0],388,389,390,390,390,390,389,388,387,386,385,384,384,384,384,384,384,384,385,386,386,386,386,386;
		}
	}
	for(set .@i,0; .@i<4; set .@i,.@i+1)
		monster strnpcinfo(2),.@treasurex[.@i],.@treasurey[.@i],"Treasure Chest",(.@i%2)?.@treasurebox:1324,1,strnpcinfo(0)+"::OnTreasureDied";
	for(set .@i,4; .@i<24; set .@i,.@i+1) {
		if (.@Treasure < .@i+1) break;
		monster strnpcinfo(2),.@treasurex[.@i],.@treasurey[.@i],"Treasure Chest",(.@i%2)?.@treasurebox:1324,1,strnpcinfo(0)+"::OnTreasureDied";
	}
	freeloop(0);
	end;

OnTreasureDied:
	end;
}

// Guild Manager
//============================================================
-	script	Mordomo#template	-1,{
	set .@GID, getcastledata(strnpcinfo(4),1);
	if (!.@GID) {
		mes "[ Steward ]";
		mes "Estou esperando por meu mestre";
		mes "para saber que destino ele escolheu";
		mes "para mim. Você acha que tem";
		mes "a coragem e força necessárias";
		mes "para conquistar esta fortaleza?";
		close;
	}
	if (getcharid(2) != .@GID || strcharinfo(0) != getguildmaster(.@GID)) {
		mes "[ Steward ]";
		mes "Hmpf. Suas Ameaças não";
		mes "me assustam! Guardiões, levem";
		mes "este intruso para longe daqui!";
		mes "Eu sempre serei fiel ao";
		mes "mestre desta fortaleza,";
		mes "o primeiro e único ^FF0000" + getguildmaster(.@GID) + "^000000.";
		close;
	}
	mes "[ Steward ]";
	mes "Oh, Mestre ^FF0000" + getguildmaster(.@GID) + "^000000...";
	mes "Como posso lhe servir hoje?";
	mes "Há algum aspecto sobre a";
	mes "manutenção da fortaleza";
	mes "que deseja discutir?";
	next;
	switch(select("Informações Sobre o Castelo:Investir no Crescimento Comercial:Investir no Aumento da Defesa:Contratar/Despedir Kafra:Ir para a Sala do Mestre")) {
	case 1:
		mes "[ Steward ]";
		mes "O Nível do Crescimento";
		mes "Comercial desta fortaleza é ^0000ff" + GetCastleData("schg_cas03",2) + ".";
		if (GetCastleData("schg_cas03",4) > 0) {
			mes "Da última vez, você investiu no";
			mes "Crescimento Comercial " + GetCastleData("schg_cas03",4) + " vezes.";
		}
		next;
		mes "[ Steward ]";
		mes "O nível da Defesa";
		mes "da Fortaleza é " + GetCastleData("schg_cas03",3) + ".";
		if (GetCastleData("schg_cas03",5) > 0) {
			mes "Da última vez, você investiu";
			mes "na Defesa " + GetCastleData("schg_cas03",5) + " vezes.";
		}
		mes " ";
		mes "Isto é tudo, mestre.";
		close;
	case 2:
		set .@Economy,getcastledata(strnpcinfo(4),2);
		setarray .@cost[0],5000,10000,20000,35000,55000,80000,110000,145000,185000,230000,280000,335000,395000,460000,530000,605000,685000,770000,860000,955000;
		set .@j,0;
		for(set .@i,6; .@i<101; set .@i,.@i+5) {
			if (.@Economy < .@i) {
				set .@eco_invest,.@cost[.@j];
				break;
			}
			set .@j, .@j+1;
		}
		// Quadruple the cost of investing if you've already invested once.
		if (getcastledata(strnpcinfo(4),4)) set .@eco_invest,.@eco_invest*4;
		mes "[ Steward ]";
		mes "Aumentando o Crescimento";
		mes "Comercial da Fortaleza,";
		mes "a quantidade de bens produzidos";
		mes "pelo Clã aumentará.";
		mes "Investindo no Crescimento Comercial";
		mes "você irá ajudar com o futuro do Clã.";
		next;
		mes "[ Steward ]";
		mes "Você pode fazer um investimento";
		mes "por dia, mas se você pode fazer";
		mes "dois investimentos se você pagar";
		mes "mais zenys: isto irá acelerar";
		mes "o desenvolvimento comercial,";
		mes "mas pode sair muito caro.";
		next;
		if (.@Economy == 100) {
			mes "[ Steward ]";
			mes "Bem... Parece que o nível de";
			mes "Crescimento Comercial da fortaleza";
			mes "está em 100%. Não é possível";
			mes "desenvolver o crescimento";
			mes "comercial além disso.";
			close;
		}
		if (getcastledata(strnpcinfo(4),4) >= 2) {
			mes "[ Steward ]";
			mes "Você já fez dois investimentos";
			mes "hoje, então você deve esperar";
			mes "até amanhã para poder fazer";
			mes "um novo investimento.";
			close;
		}
		if (getcastledata(strnpcinfo(4),4) == 0) {
			mes "[ Steward ]";
			mes "Você deve pagar ^FF0000" + .@eco_invest + "^000000 zenys";
			mes "para fazer um investimento.";
			mes "Você vai investir no";
			mes "desenvolvimento comercial";
			mes "desta fortaleza agora?";
		}
		else {
			mes "[ Steward ]";
			mes "Você deve pagar ^FF0000" + .@eco_invest + "^000000";
			mes "zenys a mais para fazer um";
			mes "segundo investimento hoje. Você irá";
			mes "investir mais uma vez?";
		}
		next;
		switch(select("Investir no Crescimento Comercial:Cancelar")) {
		case 1:
			if (getcastledata(strnpcinfo(4),4) >= 2) {
				mes "[ Steward ]";
				mes "Você já fez dois";
				mes "investimentos hoje, então você";
				mes "vai ter que esperar até amanhã";
				mes "para fazer outro investimento.";
				close;
			}
			if (Zeny < .@eco_invest) {
				mes "[ Steward ]";
				mes "Lamento, Mestre, mas";
				mes "você não tem a quantidade";
				mes "necessária de zenys para fazer";
				mes "um investimento pelo Clã hoje.";
				close;
			}
			set Zeny, Zeny-.@eco_invest;
			setcastledata strnpcinfo(4),4,getcastledata(strnpcinfo(4),4)+1;
			mes "[ Steward ]";
			mes "Uma sábia escolha para utilizar os";
			mes "fundos do Clã, Mestre. Temos que";
			mes "esperar para ver os resultados";
			mes "deste investimento amanhã.";
			close;
		case 2:
			mes "[ Steward ]";
			mes "As suas ordens, Mestre.";
			close;
		}
	case 3:
		set .@Defence,getcastledata(strnpcinfo(4),3);
		setarray .@cost[0],10000,20000,40000,70000,110000,160000,220000,290000,370000,460000,560000,670000,790000,920000,1060000,1210000,1370000,1540000,1720000,1910000;
		set .@j,0;
		for(set .@i,6; .@i<101; set .@i,.@i+5) {
			if (.@Defence < .@i) {
				set .@def_invest,.@cost[.@j];
				break;
			}
			set .@j, .@j+1;
		}
		// Quadruple the cost of investing if you've already invested once.
		if (getcastledata(strnpcinfo(4),5)) set .@def_invest,.@def_invest*4;
		mes "[ Steward ]";
		mes "Investir na defesa de nossa";
		mes "fortaleza ajuda na durabilidade";
		mes "de nossos Guardiões e do";
		mes "Emperium. Nós precisaremos de";
		mes "toda a vantagem para nos proteger";
		mes "de nosso inimigos.";
		next;
		mes "[ Steward ]";
		mes "Você pode investir na defesa";
		mes "uma vez por dia, mais se você pagar";
		mes "mais, você pode investir no";
		mes "máximo duas vezes por dia.";
		next;
		mes "[ Steward ]";
		if (getcastledata(strnpcinfo(4),3) == 100) {
			mes "O nível de Defesa desta";
			mes "Fortaleza está em 100%, e";
			mes "não podemos aumentar mais.";
			close;
		}
		if (getcastledata(strnpcinfo(4),5) >= 2) {
			mes "Mestre, você ja investiu em";
			mes "Defesa duas vezes por hoje.";
			mes "Você precisará esperar até amanhã";
			mes "se você deseja";
			mes "aumentar nossas defesas.";
			close;
		}
		if (getcastledata(strnpcinfo(4),5) == 0) {
			mes "Nós precisamos de ^FF0000" + .@def_invest + "^000000";
			mes "zenys para investir na defesa";
			mes "de nossa fortaleza.";
			mes "Você vai investir agora?";
		}
		else {
			mes "Nós precisamos de ^FF0000" + .@def_invest + "^000000";
			mes "zenys para investir na defesa";
			mes "de nossa fortaleza.";
			mes "Você vai investir agora?";
		}
		next;
		switch(select("Investir na Defesa:Cancelar")) {
		case 1:
			if (getcastledata(strnpcinfo(4),5) >= 2) {
				mes "[ Steward ]";
				mes "Mestre, você já";
				mes "investiu em Defesa duas";
				mes "vezes hoje. Você terá";
				mes "que esperar até amanhã se você realmente";
				mes "deseja aumentar as nossas defesas.";
				close;
			}
			if (Zeny < .@def_invest) {
				mes "[ Steward ]";
				mes "Lamento, Mestre, mas";
				mes "você não tem a quantidade";
				mes "necessária de zenys para fazer";
				mes "um investimento pelo Clã hoje.";
				close;
			}
			set Zeny, Zeny-.@def_invest;
			setcastledata strnpcinfo(4),5,getcastledata(strnpcinfo(4),5)+1;
			mes "[ Steward ]";
			mes "Uma sábia escolha para utilizar os";
			mes "fundos do Clã, Mestre. O Aumento";
			mes "da frequência dos tesouros";
			mes "produzidos realmente";
			mes "ajudará a todos do Clã.";
			close;
		case 2:
			mes "[ Steward ]";
			mes "As suas ordens, Mestre.";
			close;
		}
	case 4:
		if (getcastledata(strnpcinfo(4),9) == 1) {
			mes "[ Steward ]";
			mes "Você deseja despedir";
			mes "a Funcionária Kafra que";
			mes "contratamos para o Clã?";
			next;
			switch(select("Despedir:Cancelar")) {
			case 1:
				cutin "kafra_01",2;
				mes "[ Funcionária Kafra Contratada ]";
				mes "Mestre, por favor reconsidere!";
				mes "Estive trabalhando muito duro";
				mes "pelo sucesso do Clã!";
				mes "Vou tentar me esforçar mais para";
				mes "servir aos membros do Clã desta";
				mes "fortaleza, eu prometo!";
				next;
				switch(select("Despedir:Cancelar")) {
				case 1:
					mes "[ Funcionária Kafra Contratada ]";
					mes "Por quê?! O que eu fiz";
					mes "para merecer isto? Waaah~!";
					next;
					cutin "kafra_01",255;
					break;
				case 2:
					mes "[ Funcionária Kafra Contratada ]";
					mes "Obrigado, Mestre!";
					mes "Eu vou obedecer todos os seus";
					mes "comandos da melhor forma!";
					mes "Você não vai se arrepender!";
					close;
				}
				break;
			case 2:
				mes "[ Steward ]";
				mes "Ela trabalha muito duro,";
				mes "na minha opnião. Foi de nossos";
				mes "todos melhores interesses";
				mes "permitir sua admissão.";
				close;
			}
			disablenpc "Funcionária Kafra#"+strnpcinfo(2);
			setcastledata strnpcinfo(4),9,0;
			mes "[ Steward ]";
			mes "A Funcionária Kafra foi";
			mes "despedida. Você estava";
			mes "insatisfeito de verdade com";
			mes "o serviço dela por aquele preço?";
			close;
		}
		else {
			mes "[ Steward ]";
			mes "Deseja contratar uma";
			mes "Funcionária Kafra para servir";
			mes "nossa fortaleza? Você tem";
			mes "que pagar ^FF000010,000 zenys^000000 para contratar uma.";
			next;
			switch(select("Contratar:Cancelar")) {
			case 1:
				if (getgdskilllv(.@GID,10001) == 0) {
					mes "[ Steward ]";
					mes "Mestre, nós não podemos contarar uma";
					mes "Funcionária Kafra porque";
					mes "você ainda não tem a habilidade";
					mes "^FF0000Contrato com Kafra^000000";
					mes "do Clã.";
					close;
				}
				if (Zeny < 10000) {
					mes "[ Steward ]";
					mes "Mestre, nós não podemos contratar";
					mes "uma Funcionária Kafra porque";
					mes "não temos fundos o suficiente";
					mes "para pagar o contrato.";
					close;
				}
				set Zeny, Zeny-10000;
				enablenpc "Funcionária Kafra#"+strnpcinfo(2);
				setcastledata strnpcinfo(4),9,1;
				mes "[ Steward ]";
				mes "Muito bem. Agora nós temos";
				mes "com contrato oficial com a";
				mes "Corporação Kafra, e contratamos";
				mes "uma funcionária Kafra para nosso";
				mes "castelo. Aqui está ela~";
				next;
				cutin "kafra_01",2;
				mes "[ Funcionária Kafra Contratada ]";
				mes "Como vai? Fui enviada";
				mes "a pedido da chefe da";
				mes "Corporação Kafra para";
				mes "servir as nescessides.";
				mes "de seu Clã.";
				mes "Aguardo seus comandos, Mestre.";
				next;
				cutin "kafra_01",255;
				mes "[ Steward ]";
				mes "Nosso contrato vencerá dentro";
				mes "de um mês, por isso é preciso";
				mes "pagar uma taxa adicional para";
				mes "manter está Empregada Kafra";
				mes "as ordens de nosso Clã.";
				close;
			case 2:
				mes "[ Steward ]";
				mes "Como queira, Mestre.";
				mes "No entanto, eu sugiro contratar";
				mes "uma Funcionária Kafra logo";
				mes "pois possívelmente, ela iria";
				mes "beneficiar muito nossos membros";
				mes "com as facilidades do serviço Kafra.";
				close;
			}
		}
	case 5:
		mes "[ Steward ]";
		mes "Você deseja entrar na";
		mes "sala do Tesouro do Clã?";
		mes "Só você, o Líder do Clã,";
		mes "tem permisão para entrar.";
		next;
		mes "[ Steward ]";
		mes "Por favor lembre-se de abrir";
		mes "os Baús do Tesouro em pouco";
		mes "tempo. Caso contrário, o";
		mes "tesouro pode desaparecer se";
		mes "algo demorar muito.";
		next;
		switch(select("Ir para Sala do Tesouro:Cancelar")) {
		case 1:
			mes "[ Steward ]";
			mes "Me permita orientá-lo";
			mes "sobre o segredo desta";
			mes "Sala do Tesouro.";
			mes "Aperte o interruptor secreto";
			mes "quando quiser voltar aqui.";
			close2;
			if (compare(strnpcinfo(4),"arug")) {
				if (strnpcinfo(4) == "arug_cas01") setarray .@i[0],250,363;
				else if (strnpcinfo(4) == "arug_cas02") setarray .@i[0],382,227;
				else setarray .@i[0],292,266;	// Castles 3,4,5 are identical.
			}
			else {
				if (strnpcinfo(4) == "schg_cas02") setarray .@i[0],249,373;
				else if (strnpcinfo(4) == "schg_cas03") setarray .@i[0],190,16;
				else setarray .@i[0],381,381;	// Castles 1,4,5 are identical.
			}
			warp strnpcinfo(4),.@i[0],.@i[1];
			end;
		case 2:
			mes "[ Steward ]";
			mes "Os itens da Sala do Tesouro";
			mes "são produzidos uma vez por dia.";
			mes "Portanto, você deve obter os";
			mes "itens diáriamente.";
			mes "Para o bem do Clã,";
			mes "distribua o tesouro com os membros!";
			close;
		}
	}

OnStop:
	awake strnpcinfo(0);
	end;

OnStartArena:
	set .@GID,getcharid(2);
	set .@region$, (compare(strnpcinfo(4),"arug"))?"Valfreyja":"Nithafjoll";
	// Lower castle Economy
	set .@Economy,getcastledata(strnpcinfo(4),2)-5;
	if (.@Economy < 0) set .@Economy, 0;
	setcastledata strnpcinfo(4),2,.@Economy;
	// Lower Castle Defence
	set .@Defence,getcastledata(strnpcinfo(4),3)-5;
	if (.@Defence < 0) set .@Defence, 0;
	setcastledata strnpcinfo(4),3,.@Defence;
	// Set new owner
	setcastledata strnpcinfo(4),1,.@GID;
	// Clear castle's data.
	for(set .@i,4; .@i<10; set .@i,.@i+1)
		setcastledata strnpcinfo(4),.@i,0;
	// Disable Kafra
	disablenpc "Funcionária Kafra#"+strnpcinfo(2);

	announce "O Clã ["+getguildname(.@GID)+"] conquistou ["+.@region$+" "+charat(strnpcinfo(2),3)+"] Fortaleza de "+getcastlename(strnpcinfo(4))+"!",bc_all|bc_woe;
	mapannounce strnpcinfo(4),"O Emperium foi estilhaçado!",bc_map,"0x00FF00",FW_NORMAL,20,0,40;
	donpcevent "Manager#"+strnpcinfo(4)+"::OnReset";
	maprespawnguildid strnpcinfo(4),getcastledata(strnpcinfo(4),1),2;
	donpcevent "Manager#"+strnpcinfo(4)+"::OnRecvCastle2";
	donpcevent "::OnRecvCastle"+ strtoupper( substr( strnpcinfo(2), 0, 0 ) ) + substr( strnpcinfo(2), 1, getstrlen( strnpcinfo(2) ) -1 );
	sleep 10000;
	if (agitcheck2()) {
		donpcevent "Manager#"+strnpcinfo(4)+"::OnChange";
		mapannounce strnpcinfo(4),"Reconstrua esta fortaleza e restaure os Portões e as Runas Guardiãs para tornar a segurança de seu Clã mais segura!",bc_map,"0x00FF00",FW_NORMAL,20,0,40;
	}
	end;
}

// Castle Guardians
//============================================================
-	script	Guardian#template	-1,{
	set .@GID, getcastledata(strnpcinfo(4),1);
	set .@n$, "["+strnpcinfo(1)+"]";
	if (!.@GID) {
		mes .@n$;
		mes "Bom trabalho. Agora, tudo que";
		mes "você precisa fazer é destruir este";
		mes "Emperium para ganhar a propriedade";
		mes "desta fortaleza.";
		close;
	}
	if (getcharid(2) == .@GID) {
		if (strcharinfo(0) != getguildmaster(.@GID)) {
			mes .@n$;
			mes "Como guardião desta fortaleza,";
			mes "eu apenas respondo ao mestre";
			mes "do Clã que controla este";
			mes "lugar.";
			close;
		}
		else {
			if (!agitcheck2()) {
				mes .@n$;
				mes "Eu Sou "+strnpcinfo(1)+", guardião desta";
				mes "fortaleza. Por enquanto,";
				mes "tudo está quieto por aqui.";
				next;
				switch(select("Conversar:Cancelar")) {
				case 1:
					mes .@n$;
					mes "Você tem alguma pergunta";
					mes "para fazer sobre esta fortaleza?";
					next;
					switch(select("Runas Guardiãs:Portões da Fortaleza:Bandeiras:Estratégia de Batalha:Cancelar")) {
					case 1:
						mes .@n$;
						mes "Há um Emperium e";
						mes "duas Runas Guardiãs em";
						mes "cada fortaleza. Estas runas";
						mes "são a primeira linha de defesa,";
						mes "e devem ser destruídas para que";
						mes "os inimigos possam entrar.";
						next;
						mes .@n$;
						mes "As runas estão localizadas no";
						mes "^4D4DFFPortão Principal^000000 que deve ser";
						mes "protegido para previnir que os";
						mes "inimigos alcançem o Emperium.";
						mes "Runas Guardiãs podem ^4D4DFFchamar";
						mes "seus Guardiões^000000 para proteção.";
						next;
						mes .@n$;
						mes "Fortalezas com maiores níveis";
						mes "de defesa podem invocar mais";
						mes "Guardiões: por isto é tão";
						mes "importante para os Clãs";
						mes "investir no Aumento da Defesa.";
						next;
						mes .@n$;
						mes "Runas Guardiãs que foram";
						mes "destruídas podem ser revividas";
						mes "após um certo tempo, mas um dos ^FFFFFF ^000000membros do Clã deve me dar";
						mes "a ordem. Eu apenas posso relatar^FFFFFF ^000000 o status das Runas Guardiãs.";
						close;
					case 2:
						mes .@n$;
						mes "Os ^4D4DFFPortões da Fortaleza^000000 são a segunda linha de defesa da fortaleza,";
						mes "e são protegidos por barricadas extras ativadas pelas Runas Guardiãs.";
						mes "Estes portões estão localizados em três partes diferentes da fortaleza.";
						next;
						mes .@n$;
						mes "As Barricadas são protegidas pelas";
						mes "Runas Guardiãs, e são";
						mes "restauradas quando as Runas";
						mes "Guardiãs são recuperadas. No entanto,";
						mes "não é tão fácil restaurar os Portões da";
						mes "Fortaleza que estão destruídos";
						next;
						mes .@n$;
						mes "Os Portões da Fortaleza só podem ser";
						mes "restaurados quando o ^4D4DFFLíder";
						mes "mudar^000000, ou se ^4D4DFFa restauração";
						mes "for solicitada pelo Líder";
						mes "da Fortaleza^000000.";
						close;
					case 3:
						mes .@n$;
						mes "Nas Fortalezas há várias";
						mes "Bandeiras que permitem que você";
						mes "tenha acesso a áreas vitais dentro";
						mes "das restrições colocadas pelas";
						mes "Barricadas. Normalmente, ^4D4DFFa Bandeira 1";
						mes "lhe envia para um dos Portões^000000.";
						next;
						mes .@n$;
						mes "Muitas bandeiras o levam diretamente";
						mes "a outras bandeiras próximas ao Emperium.";
						mes "O número final de bandeiras conectadas";
						mes "é para haver Facilidade na";
						mes "entrada dos proprietários";
						mes "da Fortaleza. Tenha isso em mente.";
						close;
					case 4:
						mes .@n$;
						mes "Estrátegia? Seria melhor você";
						mes "desenvolver um plano de batalha";
						mes "explorando as vantagens que seu Clã tem";
						mes "e as fraquezas de seus inimigos.";
						mes "Use os Portões e as Barricadas, e os reconstrua o mais rápido possível!";
						close;
					case 5:
						mes .@n$;
						mes "Você não tem nenhuma dúvida";
						mes "para mim? Bem, eu estou";
						mes "aqui para servir sempre que necessário.";
						close;
					}
				case 2:
					mes .@n$;
					mes "Eu estou sempre aqui, então";
					mes "sinta-se à vontade para pedir";
					mes "minha assistência sempre que";
					mes "for necessário.";
					close;
				}
			}
			else {
				mes .@n$;
				mes "Saudações, "+strcharinfo(0)+".";
				mes "Quais são as suas ordens?";
				next;
				switch(select("Aumentar a defesa da Fortaleza:Relatório da Situação:Cancelar")) {
				case 1:
					if (!getd("$agit_"+strnpcinfo(2)+"[5]")) {
						if (getgdskilllv(.@GID,10002) == 0) {
							mes .@n$;
							mes "Lamento, mas as Runas Guardiãs";
							mes "não são fortes o bastante para";
							mes "invocar Guardiões no momento. Nós";
							mes "precisamos acumular";
							mes "sabedoria antes de invocarmos";
							mes "Guardiões.";
							close;
						}
						else {
							mes .@n$;
							mes "Eu vou me empenhar para invocar";
							mes "um Guardião através de uma Runa";
							mes "Guardiã. No entanto, fique sabendo";
							mes "que isto não funcionará se a";
							mes "Runa Guardiã estiver destruída.";
							setd "$agit_"+strnpcinfo(2)+"[5]",1;
							if (!getd("$agit_"+strnpcinfo(2)+"[0]"))
								donpcevent "gard1#"+strnpcinfo(4)+"::OnEnable";
							if (!getd("$agit_"+strnpcinfo(2)+"[1]"))
								donpcevent "gard2#"+strnpcinfo(4)+"::OnEnable";
							close;
						}
					}
					else {
						mes .@n$;
						mes "Você já me deu a ordem para";
						mes "invocar um Guardião para";
						mes "defender a fortaleza.";
						close;
					}
				case 2:
					mes .@n$;
					mes "O Estado de nossa defesa é...";
					setarray .@status$[0],"^4D4DFFOperacional","^FF0000Destruída","^008000Reparando";
					mes "1nd Runa Guardiã: "+.@status$[getd("$agit_"+strnpcinfo(2)+"[0]")]+"^000000";
					mes "2nd Runa Guardiã: "+.@status$[getd("$agit_"+strnpcinfo(2)+"[1]")]+"^000000";
					mes "1st Portão da Fortaleza: "+.@status$[getd("$agit_"+strnpcinfo(2)+"[2]")]+"^000000";
					mes "2nd Portão da Fortaleza: "+.@status$[getd("$agit_"+strnpcinfo(2)+"[3]")]+"^000000";
					mes "3rd Portão da Fortaleza: "+.@status$[getd("$agit_"+strnpcinfo(2)+"[4]")]+"^000000";
					close;
				case 3:
					mes .@n$;
					mes "Eu vou estar aqui,";
					mes "aguardando suas ordens.";
					close;
				}
			}
		}
	}
	else {
		mes .@n$;
		mes "Quem é você? Salafrário!";
		mes "Deixe esta fortaleza agora!";
		close;
	}

OnInit:
	setarray getd("$agit_"+strnpcinfo(2)+"[0]"),0,0,0,0,0,0;
	end;
}

// Guild Kafras
//============================================================
-	script	Kafra#template	-1,{
	cutin "kafra_01",2;
	set .@GID, getcastledata(strnpcinfo(4),1);
	if (getcharid(2) == .@GID && getgdskilllv(.@GID,10001)) {
		mes "[Funcionária Kafra]";
		mes "Bem-vindo, bravo membro";
		mes "do Clã ^FF0000" + GetGuildName(.@GID) + "^000000!";
		mes "A Corporação Kafra está";
		mes "para ajudá-lo no que precisar!";
		next;
		switch(select("Usar Armazém:Usar Seviço de Teletransporte:Alugar Carrinho:Cancelar")) {
		case 1:
			if (basicskillcheck() && getskilllv(1) < 6) {
				mes "[Funcionária Kafra]";
				mes "Me desculpe, mas você";
				mes "precisa das Habilidades Básicas";
				mes "Nv. 6 para usar o Armazém.";
			}
			else openstorage;
			break;
		case 2:
			mes "[Funcionária Kafra]";
			mes "Por favor, selecione";
			mes "o seu destino.";
			next;
			switch(select("Rachel -> 200 z:Cancelar")) {
			case 1:
				if (Zeny < 200) {
					mes "[Funcionária Kafra]";
					mes "Me desculpe, mas você";
					mes "não tem zeny o suficiente para";
					mes "pagar o serviço de teleporte.";
					mes "Por favor, obtenha 200z para usar o serviço.";
					close2;
					cutin "kafra_01",255;
					end;
				}
				set Zeny, Zeny-200;
				warp "rachel",115,125;
				end;
			case 2:
				cutin "kafra_01",255;
				break;
			}
			break;
		case 3:
			if (BaseClass != Job_Merchant) {
				mes "[Funcionária Kafra]";
				mes "Me desculpe, mas este";
				mes "serviço só esta disponível";
				mes "para as classes Mercador, Ferreiro";
				mes "e Alquimistas.";
			}
			else if (checkcart() == 1) {
				mes "[Funcionária Kafra]";
				mes "Hm? Você já alugou";
				mes "um Carrinho.";
			}
			else {
				mes "[Funcionária Kafra]";
				mes "Para alugar um carrinho";
				mes "é cobrado 800 zeny. Você";
				mes "deseja Alugar um Carrinho?";
				next;
				switch(select("Alugar um Carrinho:Cancelar")) {
				case 1:
					if (Zeny < 800) {
						mes "[Funcionária Kafra]";
						mes "Me desculpe, mas você";
						mes "não tem zeny o suficiente";
						mes "para pegar um carrinho.";
						close2;
						cutin "kafra_01",255;
						end;
					}
					set zeny,zeny-800;
					setcart;
					break;
				case 2:
					break;
				}
			}
			break;
		case 4:
			mes "[Funcionária Kafra]";
			mes "Obrigado por usar o";
			mes "Serviço Kafra. Volte";
			mes "sempre que precisar,";
			mes "de meus serviços Kafra!";
			close2;
			cutin "kafra_01",255;
			end;
		}
		close2;
		cutin "kafra_01",255;
		end;
	}
	else {
		mes "[Funcionária Kafra]";
		mes "Me desculpe, mais tenho";
		mes "contrato exclusivo com os";
		mes "membros do Clã ^FF0000" + GetGuildName(.@GID) + "^000000.";
		mes "Você terá que pedir ajuda";
		mes "a outra Funcionária Kafra...";
		close2;
		cutin "kafra_01",255;
		end;
	}
}

// Guardian Stones (2)
//============================================================
-	script	Guardian Stone#template	-1,{
	set .@GID, getcastledata(strnpcinfo(4),1);
	set .@num, atoi(charat(strnpcinfo(1),0));
	set .@var$,"$agit_"+strnpcinfo(2);
	if (getcharid(2) == .@GID) {
		mes "^3355FFVocê precisará dos";
		mes "seguintes materiais para";
		mes "reconstruir uma Runa Guardiã";
		mes "que foi destruída.^000000";
		next;
		mes "1 Oridecon";
		mes "1 Elunium";
		mes "30 Pedras";
		mes "5 Gemas Azuis";
		mes "5 Gemas Amarelas";
		mes "5 Gemas Vermelhas";
		next;
		mes "^3355FFVocê deseja continuar?^000000";
		if(select("Não:Continuar") == 1) {
			mes "^3355FFServiço cancelado.^000000";
			close;
		}
		if ((countitem(984) > 0) && (countitem(985) > 0) && (countitem(7049) > 29) && (countitem(717) > 4) && (countitem(715) > 4) && (countitem(716) > 4)) {
			mes "^3355FFOrganize as Pedras, Eluniums, e";
			mes "Oridecons, nesta ordem, no";
			mes "centro. E então você deve organizar";
			mes "as Gemas encantadas para";
			mes "reconstruir a Runa Guardiã.^000000";
			next;
			setarray .@stone$[0],"Elunium","Oridecon","Pedras";
			set .@i, select("Elunium:Oridecon:Pedras")-1;
			if (.@i == 2) set .@nice,.@nice+10;
			mes "^3355FF"+.@stone$[.@i]+" foram";
			mes "colocados no centro.^000000";
			next;
			set .@i, select("Elunium:Oridecon:Pedras")-1;
			if (.@i == 0) set .@nice,.@nice+10;
			mes "^3355FFVocê faz um círculo";
			mes "em volta do centro";
			mes "com alguns "+.@stone$[.@i]+".^000000";
			next;
			set .@i, select("Elunium:Oridecon:Pedras")-1;
			if (.@i == 1) set .@nice,.@nice+10;
			mes "^3355FFVocê cobre o";
			mes "resto do material com";
			mes "alguns "+.@stone$[.@i]+".^000000";
			next;
			mes "^3355FFAgora você precisa organizar";
			mes "as Gemas encantadas de";
			mes "acordo. Você pode identificar";
			mes "suas propriedades mágicas pelo";
			mes "seu efeito lançado.^000000";
			next;
			setarray .@effect[0],56,54,225;
			setarray .@color$[0],"Vermelha","Amarela","Azul";
			while(1) {
				if (.@roof0 > 7) break;
				set .@i, rand(3);
				specialeffect .@effect[.@i];
				mes "^3355FFAs Gemas devem ser";
				mes "organizadas na ordem correta";
				mes "de acordo com seus Poderes";
				mes "e Propriedades Mágicas.^000000";
				next;
				set .@j, select("Gema Vermlha:Gema Amarela:Gema Azul")-1;
				mes "^3355FFVocê coloca a Gema "+.@color$[.@j]+" .^000000";
				if (.@i == .@j) {
					mes "^3355FFPorém, o Sistema de Reparo de";
					mes "Runas Guardiãs falha por causa";
					mes "de um conflito de poderes mágicos.^000000";
					close;
				}
				set .@nice,.@nice+10;
				set .@roof0,.@roof0+1;
				specialeffect EF_STEAL;
				next;
			}
			if (.@nice > 90) {
				if (!getd(.@var$+"["+(.@num-1)+"]")) {
					mes "^3355FFO Sistema de Reparo";
					mes "de Runas Guardiãs";
					mes "está completo.^000000";
					close;
				}
				else {
					if (!agitcheck2()) {
						mes "^3355FFÉ Impossível reconstruir";
						mes "a Runa Guardiã porque";
						mes "o Emperium não";
						mes "está presente.^000000";
						close;
					}
					else {
						mes "^3355FFAs Gemas foram organizadas,";
						mes "e a Runa Guardiã foi reparada";
						mes "com sucesso.^000000";
						delitem 984,1; //Oridecon
						delitem 985,1; //Elunium
						delitem 7049,30; //Stone
						delitem 717,5; //Blue_Gemstone
						delitem 715,5; //Yellow_Gemstone
						delitem 716,5; //Red_Gemstone
						close2;
						donpcevent "df"+.@num+"#"+strnpcinfo(4)+"::OnEnable";
						specialeffect EF_ICECRASH;
						disablenpc strnpcinfo(0);
						setd .@var$+"["+(.@num-1)+"]",0;
						set .@df_all,getd(.@var$+"[0]")+getd(.@var$+"[1]");
						if (!.@df_all) {
							mapannounce strnpcinfo(4),"Ambas as Runas Guardiãs estão de pé, reforçando as defesas desta fortaleza!",bc_map,"0x00ff00";
							donpcevent "RL0#"+strnpcinfo(4)+"::OnEnable";
						}
						else mapannounce strnpcinfo(4),"A "+strnpcinfo(1)+" foi reparada com Sucesso.",bc_map,"0x00ff00";
						if (getd(.@var$+"[5]") == 1)
							donpcevent "gard"+.@num+"#"+strnpcinfo(4)+"::OnEnable";
						end;
					}
				}
			}
			else {
				mes "^3355FFDepois de todo este trabalho...";
				mes "Parece que você falhou em";
				mes "reparar as Runas Guardiãs,";
				mes "e perdeu materiais.^000000";
				delitem 7049,10; //Stone
				delitem 717,2; //Blue_Gemstone
				delitem 715,2; //Yellow_Gemstone
				delitem 716,2; //Red_Gemstone
				close;
			}
		}
		else {
			mes "^3355FFVocê não tem materiais o";
			mes "suficiente para reparar";
			mes "a Runa Guardiã.^000000";
			close;
		}
	}
	end;

OnInit:
OnDisable:
	disablenpc strnpcinfo(0);
	end;

OnEnable:
	enablenpc strnpcinfo(0);
	specialeffect EF_MAPPILLAR2;
	end;
}

// Control Devices (3)
//============================================================
-	script	Control#template	-1,{
	set .@GID, getcastledata(strnpcinfo(4),1);
	set .@num, atoi(charat(strnpcinfo(1),15));
	set .@var$,"$agit_"+strnpcinfo(2);
	if (getcharid(2) == .@GID) {
		if (strcharinfo(0) == getguildmaster(.@GID)) {
			if (getd(.@var$+"["+(.@num+1)+"]") == 2) {
				mes "^3355FFPortões da Fortaleza";
				mes "Demolidos podem ser reparados,";
				mes "mas você precisa conseguir";
				mes "os seguintes materiais.^000000";
				next;
				mes "^4D4DFF10 Aços^000000,";
				mes "^4D4DFF30 Troncos^000000,";
				mes "^4D4DFF5 Oridecons^000000, e";
				mes "^4D4DFF10 Emveretarcons^000000.";
				next;
				select("Continue");
				if ((countitem(1019) > 29) && (countitem(999) > 9) && (countitem(1011) > 9) && (countitem(984) > 4)) {
					mes "^3355FFVocê precisará de Troncos para";
					mes "reparar a estrutura de suporte,";
					mes "Oridecons para aumentar";
					mes "a resistência do Portão, e";
					mes "Emveretarcons para basicamente";
					mes "segurar tudo junto.^000000";
					next;
					set .@ro_of01,rand(10,15);
					while(1) {
						if (.@ro_of02 == .@ro_of01) break;
						else {
							switch(rand(1,4)) {
							case 1:
								mes "^3355FFA estrutura de suporte";
								mes "está terrivelmente danificada:";
								mes "reparar esta parte";
								mes "é a prioridade.^000000";
								next;
								switch(select("Tronco:Aço:Emveretarcon:Oridecon")) {
								case 1:
									mes "^3355FFA estrutura foi";
									mes "reforçada com madeira.^000000";
									set .@rp_temp,.@rp_temp+1;
									set .@ro_of02,.@ro_of02+1;
									specialeffect2 EF_REPAIRWEAPON;
									next;
									break;
								case 2:
									mes "^3355FFVocê tentou usar aço,";
									mes "mas parece que não funcionou";
									mes "muito bem. Você precisará tentar";
									mes "com outra coisa.^000000";
									close;
								case 3:
									mes "^3355FFVocê tentou usar emveretarcon,";
									mes "mas parece que não funcionou";
									mes "muito bem. Você precisará tentar";
									mes "com outra coisa.^000000";
									close;
								case 4:
									mes "^3355FFVocê tentou usar o oridecon,";
									mes "mas parece que ele não funcionou";
									mes "muito bem. Você precisará tentar";
									mes "com outra coisa.^000000";
									close;
								}
								break;
							case 2:
								mes "^3355FFParece que em geral";
								mes "a resistência do portão tem";
								mes "que ser reforçada com alguma coisa.^000000";
								next;
								switch(select("Tronco:Aço:Emveretarcon:Oridecon")) {
								case 1:
									mes "^3355FFVocê tentou usar madeira";
									mes "para reforçar o portão.^000000";
									set .@ro_of02,.@ro_of02+1;
									next;
									break;
								case 2:
									mes "^3355FFVocê tentou usar aço";
									mes "para reforçar o portão, mas";
									mes "isto não funcionou muito bem.";
									mes "Você terá que começar novamente.^000000";
									close;
								case 3:
									mes "^3355FFVocê tentou usar emveretarcon";
									mes "para reforçar o portão, mas";
									mes "isto não funcionou muito bem.";
									mes "Você terá que começar novamente.^000000";
									close;
								case 4:
									mes "^3355FFVocê martelou o";
									mes "oridecon: parece que";
									mes "isso irá funcionar.^000000";
									set .@rp_temp,.@rp_temp+1;
									set .@ro_of02,.@ro_of02+1;
									specialeffect2 EF_REPAIRWEAPON;
									next;
									break;
								}
								break;
							case 3:
								mes "^3355FFO dano ao portão";
								mes "causou todas estas";
								mes "rachaduras. Você terá de";
								mes "soldá-las de algum modo.^000000";
								next;
								switch(select("Tronco:Aço:Emveretarcon:Oridecon")) {
								case 1:
									mes "^3355FFVocê tentou usar madeira";
									mes "para corrigir este problema,";
									mes "mas parece que só piorou a situação.";
									mes "Você terá que começar novamente.^000000";
									close;
								case 2:
									mes "^3355FFVocê usou o aço para soldar";
									mes "todas as rachaduras: o portão está";
									mes "começando a ficar mais sólido.^000000";
									set .@rp_temp,.@rp_temp+1;
									set .@ro_of02,.@ro_of02+1;
									specialeffect2 EF_REPAIRWEAPON;
									next;
									break;
								case 3:
									mes "^3355FFVocê tentou usar emveretarcon";
									mes "para reforçar o portão, mas isto";
									mes "não funcionou muito bem.";
									mes "Você terá que começar novamente.^000000";
									close;
								case 4:
									mes "^3355FFVocê tentou usar oridecon,";
									mes "mas isto não funcionou muito";
									mes "bem. Você terá que";
									mes "começar novamente.^000000";
									close;
								}
								break;
							case 4:
								mes "^3355FFAgora você tem que ter";
								mes "certeza de que o portão é seguro";
								mes "e ao mesmo tempo sólido.^000000";
								next;
								switch(select("Tronco:Aço:Emveretarcon:Oridecon")) {
								case 1:
									mes "^3355FFVocê tentou usar madeira para";
									mes "solucionar este problema, mas parece";
									mes "que o problema até piorou.";
									mes "Você terá que começar tudo denovo.^000000";
									close;
								case 2:
									mes "^3355FFVocê tentou usar aço,";
									mes "mas não funcionou muito";
									mes "bem. Você tem que tentar";
									mes "com outra coisa.^000000";
									close;
								case 3:
									mes "^3355FFVocê teve sucesso em";
									mes "usar emveretarcon para reparar";
									mes "os problemas do portão.^000000";
									set .@rp_temp,.@rp_temp+1;
									set .@ro_of02,.@ro_of02+1;
									specialeffect2 EF_REPAIRWEAPON;
									next;
									break;
								case 4:
									mes "^3355FFVocê tentou usar oridecon,";
									mes "mas não funcionou muito";
									mes "bem. Você tem que tentar";
									mes "com outra coisa.^000000";
									close;
								}
							}
						}
					}
					mes "^3355FFBem, parece que";
					mes "você conseguiu reparar";
					mes "o portão.^000000";
					next;
					if (!agitcheck2()) {
						mes "^3355FFInfelizmente, o Portão";
						mes "da Fortaleza não pode ser reconstruído:";
						mes "o Emperium não está mais aqui.^000000";
						close;
					}
					else {
						if (.@rp_temp == .@ro_of01) {
							mes "^3355FFO Portão da Fortaleza";
							mes "foi reparado com Sucesso!^000000";
							delitem 1019,30; //Wooden_Block
							delitem 999,10; //Steel
							delitem 1011,10; //Emveretarcon
							delitem 984,5; //Oridecon
							close2;
							donpcevent "RL"+.@num+"#"+strnpcinfo(4)+"::OnEnable";
							disablenpc strnpcinfo(0);
							if (.@num == 1) set .@str$,"1st";
							else if (.@num == 2) set .@str$,"2nd";
							else if (.@num == 3) set .@str$,"3rd";
							mapannounce strnpcinfo(4),"O "+.@str$+" Portão da Fortaleza foi reconstruído!",bc_map,"0x00ff00";
							if (.@num == 1) setd .@var$+"[2]",0;
							else {
								setarray getd(.@var$+"["+.@num+"]"),2,0;
								donpcevent "Control Device0"+(.@num-1)+"#"+strnpcinfo(2)+"::OnEnable";
							}
							end;
						}
						else {
							mes "^3355FFO muro foi destruído,";
							mes "e a tentativa de reparar o";
							mes "Portão da Fortaleza falhou.";
							mes "Você perdeu alguns de seus";
							mes "itens para a reparação...^000000";
							delitem 984,2; //Oridecon
							delitem 999,4; //Steel
							delitem 1019,14; //Wooden_Block
							delitem 1011,3; //Emveretarcon
							close;
						}
					}
				}
				else {
					mes "^3355FFVocê não pode tentar reparar";
					mes "o Portão da Fortaleza se você não";
					mes "tiver todos os materiais necessários.^000000";
					close;
				}
			}
		}
	}
	end;

OnInit:
OnDisable:
	disablenpc strnpcinfo(0);
	end;

OnEnable:
	enablenpc strnpcinfo(0);
	end;
}

// Guardian Summoners (2)
//============================================================
-	script	gard#template	-1,{
OnEnable:
	// .@x[i],.@y[i]: Normal coordinates, #0-21.
	// .@w[x],.@w[y]: Special coordinates if 'defence' is under 11.
	if (compare(strnpcinfo(2),"arug")) {
		if (strnpcinfo(2) == "arug_cas01") {
			setarray .@w[0],195,250,292,188;
			setarray .x[0],233,252,232,201,224,196,269,252,201,224,222, 294,256,240,246,235,235,246,240,256,254,242;
			setarray .y[0], 83, 81,108,130,168,137, 89, 81,130,168,129, 210,203,133, 92,132,132, 92,133,203, 95,151;
		}
		else if (strnpcinfo(2) == "arug_cas02") {
			setarray .@w[0],20,169,268,169;
			setarray .x[0],104,67,67,113,122,67, 90, 91,122, 20,67, 175,204,211,209,161,186,183,150,161,209,211;
			setarray .y[0], 32,36,85, 87,112,60,167,119,112,169,85,  31, 32, 63, 88, 91,170,121,110, 91, 88, 63;
		}
		else {	// Castles 3,4,5 are identical.
			setarray .@w[0],66,157,211,159;
			setarray .x[0],130,128,128,128,110,91,65, 65,110,128,128, 156,172,154,156,155,187,212,211,155,156,172;
			setarray .y[0], 60, 77, 90,100, 96,53,71,103, 96,100, 77, 101, 95, 90, 77, 60, 54, 67,105, 60, 77, 95;
		}
	}
	else {
		if (strnpcinfo(2) == "schg_cas02") {
			setarray .@w[0],337,95,307,222;
			setarray .x[0],326,337,334,296,285,236,285,296,334,337,334, 359,300,337,317,307,300,337,317,307,359,236;
			setarray .y[0], 83, 95,119, 82, 40, 41, 40, 82,119, 95,119,  85,119,154,183,222,119,154,183,222, 85, 41;
		}
		else if (strnpcinfo(2) == "schg_cas03") {
			setarray .@w[0],306,325,364,305;
			setarray .x[0],323,273,288,306,323,323,273,288,306,273,273, 338,364,365,317,338,338,364,365,317,364,329;
			setarray .y[0],308,309,306,326,308,308,309,306,325,309,309, 309,305,261,318,310,309,305,261,318,305,314;
		}
		else {	// Castles 1,4,5 are identical.
			setarray .@w[0],108,32,128,42,187,15;	// Contains an extra pair, for whatever reason.
			setarray .x[0],111,109,65,110,88,64,47,109,111,112,120, 130,129,151,187,128,152,187,128,130,130,151;
			setarray .y[0], 18, 44,22, 40,20,40,43, 48, 18, 32, 37,  22, 47, 18, 15, 42, 43, 15, 42, 22, 28, 18;
		}
	}
	if (charat(strnpcinfo(1),4) == "2") set .@z,11;
	freeloop(1);
	set .@defence,getcastledata(strnpcinfo(2),3);
	callsub OnSummon,.@z;
	if (.@defence > 70) set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),5;
	else if (.@defence > 50) set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),4;
	else if (.@defence > 30) set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),3;
	else if (.@defence > 10) set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),2;
	if (.@w[4] && .@z)
		guardian strnpcinfo(2),.@w[4],.@w[5],"Guardian Soldier",1899,strnpcinfo(0)+"::OnGuardianDied";
	else if (.@defence < 11) {
		set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),2;
		set .@i,(.@z)?2:0;
		guardian strnpcinfo(2),.@w[.@i],.@w[.@i+1],"Guardian Soldier",1899,strnpcinfo(0)+"::OnGuardianDied";
	}
	else for(set .@i,1; .@i<getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)); set .@i,.@i+1)
		callsub OnSummon,.@i+.@z;
	freeloop(0);
	copyarray getd(".x_"+strnpcinfo(2)+"[0]"),.@x[0],22;
	copyarray getd(".y_"+strnpcinfo(2)+"[0]"),.@y[0],22;
	setd ".timer_"+charat(strnpcinfo(1),4)+strnpcinfo(2),4+.@z;
	setarray .count$[5],"1st","2nd","3rd","4th","5th";
	initnpctimer;
	end;

OnTimer300000:
OnTimer900000:
OnTimer1800000:
OnTimer2700000:
OnTimer3600000:
	if (charat(strnpcinfo(1),4) == "2") end;
	set .@var$,".timer_"+charat(strnpcinfo(1),4)+strnpcinfo(2);
	setd .@var$, getd(.@var$)+1;
	set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2))+1;
	callsub OnSummon,getd(.@var$);
	setarray .count$[5],"1st","2nd","3rd","4th","5th";
	mapannounce strnpcinfo(2),"O "+.count$[getd(.@var$)]+" Guardião foi invocado pelo Portão Principal.",bc_map,"0xff4500";
	if (getd(.@var$) == 9) {
		setd .@var$,0;
		stopnpctimer;
	}
	end;

OnTimer600000:
OnTimer1200000:
OnTimer2100000:
OnTimer3000000:
OnTimer3900000:
	if (!(charat(strnpcinfo(1),4) == "2")) end;
	set .@var$,".timer_"+charat(strnpcinfo(1),4)+strnpcinfo(2);
	setd .@var$, getd(.@var$)+1;
	set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2))+1;
	callsub OnSummon,getd(.@var$);
	if (getd(.@var$) == 20) {
		setd .@var$,0;
		stopnpctimer;
	}
	end;

OnSummon:
	guardian strnpcinfo(2),getd(".x_"+strnpcinfo(2)+"["+getarg(0)+"]"),getd(".y_"+strnpcinfo(2)+"["+getarg(0)+"]"),"Guardian Soldier",1899,strnpcinfo(0)+"::OnGuardianDied";
	return;

OnGuardianDied:
	if (charat(strnpcinfo(1),4) == "2") set .@z,11;
	set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2))-1;
	if (getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)) < 2) {
		set getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2)),getd(".MyMobCount_"+charat(strnpcinfo(1),4)+strnpcinfo(2))+1;
		callsub OnSummon,10+.@z;
	}
	end;

OnReset:
	stopnpctimer;
	killmonster strnpcinfo(2),strnpcinfo(0)+"::OnGuardianDied";
	deletearray getd(".x_"+strnpcinfo(2)+"[0]"),22;
	deletearray getd(".y_"+strnpcinfo(2)+"[0]"),22;
	end;
}

// Guardian Stone Summoners (2)
//============================================================
-	script	df#template	-1,{
OnEnable:
	if (compare(strnpcinfo(2),"arug")) {
		if (strnpcinfo(2) == "arug_cas01") setarray .@i[0],210,234,308,189;
		else if (strnpcinfo(2) == "arug_cas02") setarray .@i[0],33,168,245,168;
		else setarray .@i[0],65,171,212,149;	// Castles 3,4,5 are identical.
	}
	else {
		if (strnpcinfo(2) == "schg_cas02") setarray .@i[0],231,58,335,230;
		else if (strnpcinfo(2) == "schg_cas03") setarray .@i[0],242,309,376,251;
		else setarray .@i[0],27,35,207,75;	// Castles 1,4,5 are identical.
	}
	set .@num, atoi(charat(strnpcinfo(1),2));
	set .@j,(.@num == 1)?0:2;
	guardian strnpcinfo(2),.@i[.@j],.@i[.@j+1],((.@num == 1)?"1st":"2nd")+" Runa Guardiã",1906+.@num,strnpcinfo(0)+"::OnGuardianStoneDied";
	end;

OnDisable:
	killmonster strnpcinfo(2),strnpcinfo(0)+"::OnGuardianStoneDied";
	setd "$agit_"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9)+"["+(atoi(charat(strnpcinfo(1),2))-1)+"]",1;
	stopnpctimer;
	end;

OnGuardianStoneDied:
	set .@num, atoi(charat(strnpcinfo(1),2));
	set .@var$,"$agit_"+substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	setd .@var$+"["+(.@num-1)+"]",1;
	if (getd(.@var$+"[0]") == 1 || getd(.@var$+"[0]") == 2) set .@destroyed, .@destroyed+1;
	if (getd(.@var$+"[1]") == 1 || getd(.@var$+"[1]") == 2) set .@destroyed, .@destroyed+1;
	if (.@destroyed == 2) {
		mapannounce strnpcinfo(2),"Todas as Runas Guardiãs foram destruídas!",bc_map,"0x00ff00";
		donpcevent "RL0#"+strnpcinfo(2)+"::OnDisable";
	}
	else mapannounce strnpcinfo(2),"A "+((.@num == 1)?"1st":"2nd")+" Runa Guardiã foi destruída!",bc_map,"0x00ff00";
	donpcevent "gard"+.@num+"#"+strnpcinfo(2)+"::OnReset";
	initnpctimer;
	end;

OnTimer300000:
	set .@str$,substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
	donpcevent "1st Guardian Stone#"+.@str$+"::OnEnable";
	setd "$agit_"+.@str$+"["+(atoi(charat(strnpcinfo(1),2))-1)+"]",2;
	stopnpctimer;
	end;
}

// Barrier Summoners (4)
//============================================================
-	script	RL#template	-1,{
OnEnable:
	set .@num, atoi(charat(strnpcinfo(1),2));
	if (.@num == 0) {
		if (compare(strnpcinfo(2),"arug")) {
			if (strnpcinfo(2) == "arug_cas01") {
				setarray .@wall[0],238,74,8,6,0;
				setarray .@x[0],239,241,243,245;
				setarray .@y[0], 73, 73, 73, 73;
			}
			else if (strnpcinfo(2) == "arug_cas02") {
				setarray .@wall[0],136,136,8,6,0;
				setarray .@x[0],137,139,141,143;
				setarray .@y[0],137,137,137,137;
			}
			else {	// Castles 3,4,5 are identical.
				setarray .@wall[0],138,110,8,6,0;
				setarray .@x[0],139,141,143,145;
				setarray .@y[0],111,111,111,111;
			}
		}
		else {
			if (strnpcinfo(2) == "schg_cas02") {
				setarray .@wall[0],290,98,8,0,0;
				setarray .@x[0],289,289,289,289;
				setarray .@y[0], 98,100,102,104;
			}
			else if (strnpcinfo(2) == "schg_cas03") {
				setarray .@wall[0],326,301,6,6,0;
				setarray .@x[0],326,328,330;
				setarray .@y[0],300,300,300;
			}
			else {	// Castles 1,4,5 are identical.
				setarray .@wall[0],114,48,13,6,0;
				setarray .@x[0],115,117,119,121,123,125;
				setarray .@y[0], 49, 49, 49, 49, 49, 49;
			}
		}
	}
	else if (.@num == 1) {
		if (compare(strnpcinfo(2),"arug")) {
			if (strnpcinfo(2) == "arug_cas01") {
				setarray .@wall[0],239,53,8,6,1;
				setarray .@x[0],239,241,243,240,242,244;
				setarray .@y[0], 55, 55, 55, 54, 54, 54;
			}
			else if (strnpcinfo(2) == "arug_cas02") {
				setarray .@wall[0],150,223,12,6,1;
				setarray .@x[0],151,153,155,157,159,161;
				setarray .@y[0],222,222,222,222,222,222;
			}
			else {	// Castles 3,4,5 are identical.
				setarray .@wall[0],139,158,6,6,1;
				setarray .@x[0],140,142,144,139,141,143;
				setarray .@y[0],157,157,157,156,156,156;
			}
		}
		else {
			if (strnpcinfo(2) == "schg_cas02") {
				setarray .@wall[0],279,98,8,0,1;
				setarray .@x[0],280,280,280,281,281,281;
				setarray .@y[0], 98,100,102, 99,101,103;
			}
			else if (strnpcinfo(2) == "schg_cas03") {
				setarray .@wall[0],325,277,8,6,1;
				setarray .@x[0],326,328,330,327,329,331;
				setarray .@y[0],278,278,278,279,279,279;
			}
			else {	// Castles 1,4,5 are identical.
				setarray .@wall[0],114,51,13,6,1;
				setarray .@x[0],115,117,119,121,123,125;
				setarray .@y[0], 50, 50, 50, 50, 50, 50;
			}
		}
	}
	else if (.@num == 2) {
		if (compare(strnpcinfo(2),"arug")) {
			if (strnpcinfo(2) == "arug_cas01") {
				setarray .@wall[0],107,124,6,6,1;
				setarray .@x[0],107,109,111,108,110,112;
				setarray .@y[0],122,122,122,123,123,123;
			}
			else if (strnpcinfo(2) == "arug_cas02") {
				setarray .@wall[0],125,342,8,0,1;
				setarray .@x[0],126,126,126,127,127,127;
				setarray .@y[0],343,345,347,344,346,348;
			}
			else {	// Castles 3,4,5 are identical.
				setarray .@wall[0],138,210,8,6,1;
				setarray .@x[0],140,142,144,139,141,143;
				setarray .@y[0],209,209,209,208,208,208;
			}
		}
		else {
			if (strnpcinfo(2) == "schg_cas02") {
				setarray .@wall[0],230,213,6,0,1;
				setarray .@x[0],231,231,231,232,232,232;
				setarray .@y[0],213,215,217,213,215,217;
			}
			else if (strnpcinfo(2) == "schg_cas03") {
				setarray .@wall[0],200,230,8,0,1;
				setarray .@x[0],201,201,201,202,202,202;
				setarray .@y[0],231,233,235,232,234,236;
			}
			else {	// Castles 1,4,5 are identical.
				setarray .@wall[0],114,154,13,6,1;
				setarray .@x[0],115,117,119,121,123,125;
				setarray .@y[0],153,153,153,153,153,153;
			}
		}
	}
	else {
		if (compare(strnpcinfo(2),"arug")) {
			if (strnpcinfo(2) == "arug_cas01") {
				setarray .@wall[0],84,171,8,6,1;
				setarray .@x[0], 84, 86, 88, 90;
				setarray .@y[0],170,170,170,170;
			}
			else if (strnpcinfo(2) == "arug_cas02") {
				setarray .@wall[0],38,314,12,6,1;
				setarray .@x[0], 40, 42, 44, 46;
				setarray .@y[0],315,315,315,315;
			}
			else {	// Castles 3,4,5 are identical.
				setarray .@wall[0],138,263,8,6,1;
				setarray .@x[0],139,141,143,145;
				setarray .@y[0],262,262,262,262;
			}
		}
		else {
			if (strnpcinfo(2) == "schg_cas02") {
				setarray .@wall[0],160,141,6,6,1;
				setarray .@x[0],160,162,164,166;
				setarray .@y[0],140,140,140,140;
			}
			else if (strnpcinfo(2) == "schg_cas03") {
				setarray .@wall[0],285,198,8,0,1;
				setarray .@x[0],284,284,284,284;
				setarray .@y[0],199,201,203,205;
			}
			else {	// Castles 1,4,5 are identical.
				setarray .@wall[0],116,241,11,6,1;
				setarray .@x[0],116,118,120,122;
				setarray .@y[0],240,240,240,240;
			}
		}
	}
	if (.@num == 3) set getd(".MyMobCount_"+.@num+strnpcinfo(2)),4;
	else if (.@num) set getd(".MyMobCount_"+.@num+strnpcinfo(2)),6;
	setwall strnpcinfo(2),.@wall[0],.@wall[1],.@wall[2],.@wall[3],.@wall[4],substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9)+"_"+strnpcinfo(1);
	set .@j,(getd(".MyMobCount_"+.@num+strnpcinfo(2)))?getd(".MyMobCount_"+.@num+strnpcinfo(2)):getarraysize(.@x);
	for(set .@i,0; .@i<.@j; set .@i,.@i+1)
		guardian strnpcinfo(2),.@x[.@i],.@y[.@i]," ",1905,strnpcinfo(0)+"::OnBarrierDestroyed";
	end;

OnBarrierDestroyed:
	set .@num, atoi(charat(strnpcinfo(1),2));
	if (!.@num) end;
	set getd(".MyMobCount_"+.@num+strnpcinfo(2)),getd(".MyMobCount_"+.@num+strnpcinfo(2))-1;
	if (getd(".MyMobCount_"+.@num+strnpcinfo(2)) == 0) {
		set .@var$,substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9);
		setd "$agit_"+.@var$+"["+(.@num+1)+"]",1;
		setarray .@count$[0],"1st","2nd","3rd";
		mapannounce strnpcinfo(2),"O "+.@count$[.@num-1]+" Portão da Fortaleza foi destruído.",bc_map,"0x00ff00";
		delwall .@var$+"_"+strnpcinfo(1);
	}
	end;

OnDisable:
	delwall substr(strnpcinfo(2),0,1)+substr(strnpcinfo(2),8,9)+"_"+strnpcinfo(1);
	killmonster strnpcinfo(2),strnpcinfo(0)+"::OnBarrierDestroyed";
	end;
}

// Link Flags (function)
//============================================================
function	script	LinkFlag	{
	if (!getcharid(2) || getcharid(2) != getcastledata(strnpcinfo(4),1)) end;
	if (getarg(0) == "Convenience Facility") {
		mes "^3355FFEste é o Serviço de Teleporte";
		mes "da Fortaleza. Gostaria de";
		mes "ser teleportado para o";
		mes "Serviço de Conveniências para";
		mes "membros do Clã?^000000";
		if(select("Ir para Serviço de Convêniencia:Cancelar") == 1)
			warp strnpcinfo(4),getarg(1),getarg(2);
		close;
	}
	if (getarg(0) == "Emperium Center") {
		mes "^3355FFEste é o Serviço de Teleporte";
		mes "da Fortaleza. Gostaria de";
		mes "ser teleportado para a";
		mes "Sala do Emperium?^000000";
		if(select("Teleportar:Cancelar") == 1)
			warp strnpcinfo(4),getarg(1),getarg(2);
		close;
	}
	mes "^3355FFEste é o Serviço de Teleporte";
	mes "da Fortaleza. Escolha";
	mes "a que local interno você";
	mes "deseja ir.^000000";
	for(set .@i,0; .@i<getargcount(); set .@i,.@i+3)
		set .@menu$, .@menu$+getarg(.@i)+":";
	set .@menu$, .@menu$+"Cancel";
	set .@i, select(.@menu$)-1;
	if (.@i != getargcount()/3)
		warp strnpcinfo(4),getarg(.@i*3+1),getarg(.@i*3+2);
	close;
}

// Return Flags (function)
//============================================================
function	script	ReturnFlag	{
	set .@str$, (compare(strnpcinfo(4),"aru"))?"Arunafeltz":"Schwaltzvalt";
	set .@GID, getcastledata(getarg(0),1);
	if (!.@GID) {
		mes "[ "+.@str$+" Royal Edict ]";
		mes "O Santo reino de";
		mes .@str$+" declara que";
		mes "ainda tem de reinvidicar um mestre";
		mes "sobre este castelo. O primeiro";
		mes "que quebrar o Emperium conquistará";
		mes "e se tornará o novo dono.";
		close;
	}
	if (getcharid(2) == .@GID && getarg(1,0)) {
		mes "[ Voz da Alinhagem ]";
		mes "Bravo guerreiro,";
		mes "deseja retornar para";
		mes "o seu castelo?";
		next;
		if(select("Retornar para a Fortaleza:Cancelar") == 1 && getcharid(2) == getcastledata(getarg(0),1)) {
			if (compare(getarg(0),"arug")) {
				if (getarg(0) == "arug_cas01") setarray .@i[0],67,193;
				else if (getarg(0) == "arug_cas02") setarray .@i[0],43,256;
				else setarray .@i[0],121,318;	// Castles 3,4,5 are identical.
			}
			else {
				if (getarg(0) == "schg_cas02") setarray .@i[0],136,188;
				else if (getarg(0) == "schg_cas03") setarray .@i[0],308,202;
				else setarray .@i[0],120,290;	// Castles 1,4,5 are identical.
			}
			warp getarg(0),.@i[0],.@i[1];
		}
		close;
	}
	mes "[  Decreto Real de "+.@str$+" ]";
	mes "O Santo Reino de";
	mes .@str$+" declara que";
	mes "este castelo pertence";
	mes "ao Clã ^FF0000"+getguildname(.@GID)+"^000000.";
	next;
	mes "[  Decreto Real de "+.@str$+" ]";
	mes "^FF0000"+getguildmaster(.@GID)+"^000000 é";
	mes "o Líder do Clã ^FF0000"+getguildname(.@GID)+"^000000.";
	mes "Qualquer objeção contra isso";
	mes "deverá revindicar este Castelo";
	mes "atravéz das forças do aço e da mágia";
	mes "e assim ser nomeado Mestre com seu Clã.";
	close;
}

// Treasure Room Switches
//============================================================
-	script	Switch#template	-1,{
	mes " ";
	mes "^3355FFVocê vai puxar";
	mes "a pequena alavanca?^000000";
	next;
	if(select("Puxar:Cancelar") == 2) close;
	if (compare(strnpcinfo(4),"arug")) {
		if (strnpcinfo(4) == "arug_cas01") setarray .@i[0],121,357;
		else if (strnpcinfo(4) == "arug_cas02") setarray .@i[0],387,323;
		else setarray .@i[0],321,57;	// Castles 3,4,5 are identical.
	}
	else {
		if (strnpcinfo(4) == "schg_cas02") setarray .@i[0],339,79;
		else if (strnpcinfo(4) == "schg_cas03") setarray .@i[0],57,13;
		else setarray .@i[0],275,244;	// Castles 1,4,5 are identical.
	}
	warp strnpcinfo(4),.@i[0],.@i[1];
	close;
}

// Guild Dungeon Warps
//============================================================
-	script	Sunflower#template	-1,{
	if (getcharid(2) == getcastledata(strnpcinfo(4),1)) {
		mes "- É um Girassol Fantasticamente Grande; Tanto quanto um Humano! ... Você sente algo misterioso que emana da flor. -";
		next;
		switch(select("Segurar a Haste.:Nada.")) {
		case 1:
			if (compare(strnpcinfo(4),"arug")) {
				set .@map$,"arug_dun01";
				setarray .@mapx[0],350,350,50, 50,200;
				setarray .@mapy[0],350, 50,50,350,386;
			}
			else {
				set .@map$,"schg_dun01";
				setarray .@mapx[0],262, 94, 79,212,322;
				setarray .@mapy[0],314,284,140, 70,166;
			}
			set .@i, atoi(charat(strnpcinfo(4),9))-1;
			warp .@map$,.@mapx[.@i],.@mapy[.@i];
			close;
		case 2:
			mes "É assustador demais para tocar coisas desconhecidas.";
			close;
		}
	}
}