//---------------------------------------------------------
// _________                                    
// \_   ___ \_______  ____   ____  __ __  ______
// /    \  \/\_  __ \/    \ /    \|  |  \/  ___/
// \     \____|  | \(  ( ) )   |  \  |  /\___ \ 
//  \______  /|__|   \____/|___|  /____//____  >
//         \/                   \/           \/  
//---------------------------------------------------------
// Arquivo de configuração da batalha campal
// Traduzido por mkbu95
//---------------------------------------------------------

battlegrounds: (
{
	/* funcionalidade incompleta */
	feature_off:true
	/* variável de personagem para delay global da batalha campal */
	global_delay_var: "BG_Delay_Tick"
	/* quantos segundos para considerar um jogador "afk" e removê-lo da partida? */
	maximum_afk_seconds: 30
		
	/* você pode adicionar quantas arenas aqui */
	/* para arenas personalizadas, você precisará editar o arquivo "lua files/entryqueue/entryqueuelist.lua" na sua data */
	arenas: ({
		name: "Tierra Gorge" //deve ser IGUAL ao nome do client
		event: "Tierra_BG2::OnPlayerListReady"
		minLevel: 80
		maxLevel: 150
		reward: {/* quantidade de medalhas a serem recebidas em cada caso */
			win: 3 //vencer
			loss: 1 //perder
			draw: 1 //empatar
		}
		minPlayers: 6 /* mínimo de jogadores para começar a partida */
		maxPlayers: 60 /* número máximo de jogadores */
		minTeamPlayers: 6 /* quantidade mínimo de membros de um time necessário para um time (grupo ou clã) entrar */
		delay_var: "Tierra_BG_Tick" /* nome da variável de personagem que irá armazenar o delay da partida */
		maxDuration: 30 /* duração máxima da partida em minutos, ao ultrapassar este tempo o time com mais pontos ganha (se os pontos forem iguais será empate) */
		fillDuration: 20 /* tempo em segundos para aguardar por mais participantes quando o mínimo for atingido */
		pGameDuration: 20 /* tempo para esperar por jogadores confirmar a participação após a fila de espera ter acabado */
	},{
		name: "Flavius" //deve ser IGUAL ao nome do client
		event: "start#bat_b01::OnPlayerListReady"
		minLevel: 80
		maxLevel: 150
		reward: {/* quantidade de medalhas a serem recebidas em cada caso */
			win: 9 //vencer
			loss: 3 //perder
			draw: 3 //empatar
		}
		minPlayers: 2 /* mínimo de jogadores para começar a partida (VALOR TEMPORÁRIO, VOLTAR AO NORMAL) */
		maxPlayers: 60 /* número máximo de jogadores */
		minTeamPlayers: 6 /* quantidade mínimo de membros de um time necessário para um time (grupo ou clã) entrar */
		delay_var: "Flavius_BG_Tick" /* nome da variável de personagem que irá armazenar o delay da partida */
		maxDuration: 30 /* duração máxima da partida em minutos, ao ultrapassar este tempo o time com mais pontos ganha (se os pontos forem iguais será empate) */
		fillDuration: 20 /* tempo em segundos para aguardar por mais participantes quando o mínimo for atingido */
		pGameDuration: 20 /* tempo para esperar por jogadores confirmar a participação após a fila de espera ter acabado */
	},{
		name: "KVM (Level 80 and up)" //deve ser IGUAL ao nome do client
		event: "KvM03_BG::OnPlayerListReady"
		minLevel: 80
		maxLevel: 150
		reward: {/* quantidade de medalhas a serem recebidas em cada caso */
			win: 5 //vencer
			loss: 1 //perder
			draw: 1 //empatar
		}
		minPlayers: 4 /* mínimo de jogadores para começar a partida */
		maxPlayers: 60 /* número máximo de jogadores */
		minTeamPlayers: 5 /* quantidade mínimo de membros de um time necessário para um time (grupo ou clã) entrar */
		delay_var: "KVM_BG_Tick" /* nome da variável de personagem que irá armazenar o delay da partida */
		maxDuration: 30 /* duração máxima da partida em minutos, ao ultrapassar este tempo o time com mais pontos ganha (se os pontos forem iguais será empate) */
		fillDuration: 20 /* tempo em segundos para aguardar por mais participantes quando o mínimo for atingido */
		pGameDuration: 20 /* tempo para esperar por jogadores confirmar a participação após a fila de espera ter acabado */
	},{
		name: "KVM (Level 60~79)" //deve ser IGUAL ao nome do client
		event: "KvM03_BG::OnPlayerListReady"
		minLevel: 60
		maxLevel: 79
		reward: {/* quantidade de medalhas a serem recebidas em cada caso */
			win: 2 //vencer
			loss: 0 //perder
			draw: 1 //empatar
		}
		minPlayers: 4 /* mínimo de jogadores para começar a partida */
		maxPlayers: 60 /* número máximo de jogadores */
		minTeamPlayers: 5 /* quantidade mínimo de membros de um time necessário para um time (grupo ou clã) entrar */
		delay_var: "KVM_BG_Tick" /* nome da variável de personagem que irá armazenar o delay da partida */
		maxDuration: 30 /* duração máxima da partida em minutos, ao ultrapassar este tempo o time com mais pontos ganha (se os pontos forem iguais será empate) */
		fillDuration: 20 /* tempo em segundos para aguardar por mais participantes quando o mínimo for atingido */
		pGameDuration: 20 /* tempo para esperar por jogadores confirmar a participação após a fila de espera ter acabado */
	},{
		name: "KVM (Level 59 and below)" //deve ser IGUAL ao nome do client
		event: "KvM03_BG::OnPlayerListReady"
		minLevel: 1
		maxLevel: 59
		reward: {/* quantidade de medalhas a serem recebidas em cada caso */
			win: 1 //vencer
			loss: 0 //perder
			draw: 0 //empatar
		}
		minPlayers: 4 /* mínimo de jogadores para começar a partida */
		maxPlayers: 60 /* número máximo de jogadores */
		minTeamPlayers: 5 /* quantidade mínimo de membros de um time necessário para um time (grupo ou clã) entrar */
		delay_var: "KVM_BG_Tick" /* nome da variável de personagem que irá armazenar o delay da partida */
		maxDuration: 30 /* duração máxima da partida em minutos, ao ultrapassar este tempo o time com mais pontos ganha (se os pontos forem iguais será empate) */
		fillDuration: 20 /* tempo em segundos para aguardar por mais participantes quando o mínimo for atingido */
		pGameDuration: 20 /* tempo para esperar por jogadores confirmar a participação após a fila de espera ter acabado */
	}
	)
})
